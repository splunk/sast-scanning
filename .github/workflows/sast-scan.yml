name: SAST Scan using Semgrep CI

on:
  workflow_call:
    secrets:
      SEMGREP_KEY:
        required: true
    inputs:
      block_mode:
        required: false
        default: 'off'
        type: string

jobs:
  sast-scan:
    runs-on: ubuntu-latest
    name: sast-scan

    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: semgrep/semgrep

    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      - uses: actions/checkout@v4
      - run: semgrep ci --sarif-output=semgrep.sarif --json-output=semgrep_output.json
        env:
          # Connect to Semgrep AppSec Platform through your SEMGREP_APP_TOKEN.
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_KEY }}

      - name: Upload Semgrep JSON as artifact
        uses: actions/upload-artifact@v4
        with:
          name: semgrep_output.json
          path: semgrep_output.json
          retention-days: 10

      - name: Run Block Mode
        run: |
          #Block job if there are vulnerabilities depending in block mode
    
          total_findings=$(jq '.results | length' "semgrep_output.json")
          error_findings=$(jq '[.results[] | select(.end.severity == "ERROR")] | length' "semgrep_output.json")

          if [[ "${{ inputs.block_mode }}" == "policy" && "$error_findings" -gt 0 ]]; then
              echo "********** Job failed due to high vulnerabilities found and block mode set to 'policy' **********"
              echo "High Severity Vulnerabilities: $error_findings"
              exit 1
          fi

          if [[ "${{ inputs.block_mode }}" == "on" && "$total_findings" -gt 0 ]]; then
              echo "********** Job failed due to vulnerabilities found and block mode set to 'on' **********"
              echo "Vulnerabilities: $total_findings"
              exit 1
          fi